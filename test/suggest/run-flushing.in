#!/bin/bash

if test -z "$srcdir" ; then
    echo run from make check or set srcdir=.
    exit 1
fi

set -u


if ! command -V timeout >/dev/null 2>/dev/null; then
    # require /usr/bin/timeout, since it could hang if there's a bug
    exit 77
fi

# Prefer gawk if installed (fails with macos awk, mawk etc.).
awk=@AWK@

tmpd=$(mktemp -d -t divvun-suggest-test.XXXXXXXX)
to="${tmpd}/to"
from="${tmpd}/from"
mkfifo "${to}" "${from}"

#cd "$(dirname "$0")" || exit 1

# Server:
../../src/divvun-suggest --json generator.hfstol "$srcdir"/errors.xml \
    < "${to}" >"${from}" 2>"${tmpd}/err" &
pid=$!
trap 'kill $pid; rm -rf "${tmpd}"' EXIT


declare -i success=0

# Client:
exec 3>"${to}"
exec 4<"${from}"
for _ in test it a couple times; do
    for input in "$srcdir"/input.*.cg; do
        base=$(basename "$input")
        base=${base##input}; base=${base%%cg}
        # shellcheck disable=SC2016
        timeout 1 "${awk}" '{print $0} END{print "<STREAMCMD:FLUSH>"}' "${input}" >&3
        case $? in
            0) : ;;
            124) echo "divvun-suggest flushing write timed out"
                 exit 1
                 ;;
            *) echo "divvun-suggest flushing write failed with $?"
               exit 1
               ;;
        esac
        # shellcheck disable=SC2016
        timeout 1 "${awk}" 'BEGIN{RS="\0"}{printf "%s", $0;exit}' <&4 >output-flushing"${base}"json
        case $? in
            0) : ;;
            124) echo "divvun-suggest flushing read timed out"
                 exit 1
                 ;;
            *) echo "divvun-suggest flushing read failed with $?, output is:"
               cat output-flushing"${base}"json
               exit 1
               ;;
        esac
        if ! diff "$srcdir"/expected"${base}"json output-flushing"${base}"json; then
            echo "stdout differs for ${base} (flushing)"
            exit 1
        fi
        (( ++success ))
    done
done

echo "Daemon successfully handled ${success} requests."
